<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hframework.peacock.system.dao.DictionaryItemMapper" >
  <resultMap id="BaseResultMap" type="com.hframework.peacock.system.domain.model.DictionaryItem" >
    <constructor >
      <idArg column="dictionary_item_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="value" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="text" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="desc" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="is_default" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="pri" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="ext1" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="ext2" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="dictionary_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="dictionary_code" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="op_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="modify_op_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="modify_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="del_flag" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    dictionary_item_id, `value`, `text`, `desc`, is_default, pri, ext1, ext2, dictionary_id, 
    dictionary_code, op_id, create_time, modify_op_id, modify_time, del_flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hframework.peacock.system.domain.model.DictionaryItem_Example" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `dictionary_item`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitEnd != null and limitEnd != 0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from `dictionary_item`
    where dictionary_item_id = #{dictionaryItemId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from `dictionary_item`
    where dictionary_item_id = #{dictionaryItemId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hframework.peacock.system.domain.model.DictionaryItem_Example" >
    delete from `dictionary_item`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hframework.peacock.system.domain.model.DictionaryItem" >
    <selectKey resultType="java.lang.Long" keyProperty="dictionaryItemId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `dictionary_item` (`value`, `text`, `desc`, 
      is_default, pri, ext1, 
      ext2, dictionary_id, dictionary_code, 
      op_id, create_time, modify_op_id, 
      modify_time, del_flag)
    values (#{value,jdbcType=VARCHAR}, #{text,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}, 
      #{isDefault,jdbcType=INTEGER}, #{pri,jdbcType=DECIMAL}, #{ext1,jdbcType=VARCHAR}, 
      #{ext2,jdbcType=VARCHAR}, #{dictionaryId,jdbcType=BIGINT}, #{dictionaryCode,jdbcType=VARCHAR}, 
      #{opId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{modifyOpId,jdbcType=BIGINT}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hframework.peacock.system.domain.model.DictionaryItem" >
    <selectKey resultType="java.lang.Long" keyProperty="dictionaryItemId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `dictionary_item`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="value != null" >
        `value`,
      </if>
      <if test="text != null" >
        `text`,
      </if>
      <if test="desc != null" >
        `desc`,
      </if>
      <if test="isDefault != null" >
        is_default,
      </if>
      <if test="pri != null" >
        pri,
      </if>
      <if test="ext1 != null" >
        ext1,
      </if>
      <if test="ext2 != null" >
        ext2,
      </if>
      <if test="dictionaryId != null" >
        dictionary_id,
      </if>
      <if test="dictionaryCode != null" >
        dictionary_code,
      </if>
      <if test="opId != null" >
        op_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="modifyOpId != null" >
        modify_op_id,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="value != null" >
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="text != null" >
        #{text,jdbcType=VARCHAR},
      </if>
      <if test="desc != null" >
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null" >
        #{isDefault,jdbcType=INTEGER},
      </if>
      <if test="pri != null" >
        #{pri,jdbcType=DECIMAL},
      </if>
      <if test="ext1 != null" >
        #{ext1,jdbcType=VARCHAR},
      </if>
      <if test="ext2 != null" >
        #{ext2,jdbcType=VARCHAR},
      </if>
      <if test="dictionaryId != null" >
        #{dictionaryId,jdbcType=BIGINT},
      </if>
      <if test="dictionaryCode != null" >
        #{dictionaryCode,jdbcType=VARCHAR},
      </if>
      <if test="opId != null" >
        #{opId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyOpId != null" >
        #{modifyOpId,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hframework.peacock.system.domain.model.DictionaryItem_Example" resultType="java.lang.Integer" >
    select count(*) from `dictionary_item`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update `dictionary_item`
    <set >
      <if test="record.dictionaryItemId != null" >
        dictionary_item_id = #{record.dictionaryItemId,jdbcType=BIGINT},
      </if>
      <if test="record.value != null" >
        `value` = #{record.value,jdbcType=VARCHAR},
      </if>
      <if test="record.text != null" >
        `text` = #{record.text,jdbcType=VARCHAR},
      </if>
      <if test="record.desc != null" >
        `desc` = #{record.desc,jdbcType=VARCHAR},
      </if>
      <if test="record.isDefault != null" >
        is_default = #{record.isDefault,jdbcType=INTEGER},
      </if>
      <if test="record.pri != null" >
        pri = #{record.pri,jdbcType=DECIMAL},
      </if>
      <if test="record.ext1 != null" >
        ext1 = #{record.ext1,jdbcType=VARCHAR},
      </if>
      <if test="record.ext2 != null" >
        ext2 = #{record.ext2,jdbcType=VARCHAR},
      </if>
      <if test="record.dictionaryId != null" >
        dictionary_id = #{record.dictionaryId,jdbcType=BIGINT},
      </if>
      <if test="record.dictionaryCode != null" >
        dictionary_code = #{record.dictionaryCode,jdbcType=VARCHAR},
      </if>
      <if test="record.opId != null" >
        op_id = #{record.opId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyOpId != null" >
        modify_op_id = #{record.modifyOpId,jdbcType=BIGINT},
      </if>
      <if test="record.modifyTime != null" >
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update `dictionary_item`
    set dictionary_item_id = #{record.dictionaryItemId,jdbcType=BIGINT},
      `value` = #{record.value,jdbcType=VARCHAR},
      `text` = #{record.text,jdbcType=VARCHAR},
      `desc` = #{record.desc,jdbcType=VARCHAR},
      is_default = #{record.isDefault,jdbcType=INTEGER},
      pri = #{record.pri,jdbcType=DECIMAL},
      ext1 = #{record.ext1,jdbcType=VARCHAR},
      ext2 = #{record.ext2,jdbcType=VARCHAR},
      dictionary_id = #{record.dictionaryId,jdbcType=BIGINT},
      dictionary_code = #{record.dictionaryCode,jdbcType=VARCHAR},
      op_id = #{record.opId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_op_id = #{record.modifyOpId,jdbcType=BIGINT},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      del_flag = #{record.delFlag,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hframework.peacock.system.domain.model.DictionaryItem" >
    update `dictionary_item`
    <set >
      <if test="value != null" >
        `value` = #{value,jdbcType=VARCHAR},
      </if>
      <if test="text != null" >
        `text` = #{text,jdbcType=VARCHAR},
      </if>
      <if test="desc != null" >
        `desc` = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null" >
        is_default = #{isDefault,jdbcType=INTEGER},
      </if>
      <if test="pri != null" >
        pri = #{pri,jdbcType=DECIMAL},
      </if>
      <if test="ext1 != null" >
        ext1 = #{ext1,jdbcType=VARCHAR},
      </if>
      <if test="ext2 != null" >
        ext2 = #{ext2,jdbcType=VARCHAR},
      </if>
      <if test="dictionaryId != null" >
        dictionary_id = #{dictionaryId,jdbcType=BIGINT},
      </if>
      <if test="dictionaryCode != null" >
        dictionary_code = #{dictionaryCode,jdbcType=VARCHAR},
      </if>
      <if test="opId != null" >
        op_id = #{opId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyOpId != null" >
        modify_op_id = #{modifyOpId,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
    </set>
    where dictionary_item_id = #{dictionaryItemId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hframework.peacock.system.domain.model.DictionaryItem" >
    update `dictionary_item`
    set `value` = #{value,jdbcType=VARCHAR},
      `text` = #{text,jdbcType=VARCHAR},
      `desc` = #{desc,jdbcType=VARCHAR},
      is_default = #{isDefault,jdbcType=INTEGER},
      pri = #{pri,jdbcType=DECIMAL},
      ext1 = #{ext1,jdbcType=VARCHAR},
      ext2 = #{ext2,jdbcType=VARCHAR},
      dictionary_id = #{dictionaryId,jdbcType=BIGINT},
      dictionary_code = #{dictionaryCode,jdbcType=VARCHAR},
      op_id = #{opId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_op_id = #{modifyOpId,jdbcType=BIGINT},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=INTEGER}
    where dictionary_item_id = #{dictionaryItemId,jdbcType=BIGINT}
  </update>
</mapper>